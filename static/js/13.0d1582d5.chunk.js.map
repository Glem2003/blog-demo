{"version":3,"file":"static/js/13.0d1582d5.chunk.js","mappings":"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","sources":["components/NavBar/BlogNavBar.tsx","data/footer.tsx","components/Footer/BlogFooter.tsx","components/common/defaultPage.tsx","utils/fetchApi.tsx","hooks/useFetchArticle.tsx","components/Articles/BlogArticle.tsx","components/Main/BlogMain.tsx","pages/BlogPage.tsx"],"sourcesContent":["import Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst BlogNavBar: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Navbar\r\n                expand='md'\r\n            >\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">Blog Platform</Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <Nav.Link href=\"/\">Home</Nav.Link>\r\n                            <Nav.Link href=\"/blog\">Blog</Nav.Link>\r\n                            <Nav.Link href=\"/about_us\">About us</Nav.Link>\r\n                            <Nav.Link href=\"/contact_us\">Contact us</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogNavBar","//icon\r\nimport { RiFacebookCircleLine, LiaInstagram, AiFillGithub } from '../assets/icon/index'\r\n\r\nconst footerIconItem = [\r\n    { customClass: 'ms-auto text-dark', content: <RiFacebookCircleLine />, link: null },\r\n    { customClass: 'text-dark', content: <LiaInstagram />, link: null },\r\n    { customClass: 'text-dark', content: <AiFillGithub />, link: 'https://github.com/Glem2003/blog-demo' }\r\n]\r\n\r\nexport default footerIconItem","// style\r\nimport './BlogFooter.sass'\r\n\r\n//data\r\nimport footerIconItem from '../../data/footer'\r\n\r\n//content\r\nimport { footerContent as f } from '../../content/index'\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nconst BlogFooter: React.FC = () => {\r\n\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"footer__text\">{f.footer.text}</div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Stack direction='horizontal' className='justify-content-end'>\r\n                            {footerIconItem.map(item => {\r\n                                const { customClass, content, link } = item\r\n                                return (\r\n                                    <a href={link != null ? link : '/#!'}>\r\n                                        <div className={`footer__icon ${customClass !== null ? customClass : ''}`}>{content}</div>\r\n                                    </a>\r\n                                )\r\n                            })}\r\n                        </Stack>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </footer >\r\n    )\r\n}\r\n\r\nexport default BlogFooter","import BlogNavBar from \"../NavBar/BlogNavBar\"\r\nimport BlogFooter from \"../Footer/BlogFooter\"\r\n\r\n//type\r\nimport { defaultPageProps } from \"../../types/DefaultPageProps\"\r\n\r\nconst DefaultPage: React.FC<defaultPageProps> = (props) => {\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <>\r\n            <BlogNavBar />\r\n            {children}\r\n            <BlogFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultPage","import { Article } from \"../types/BlogArticleProps\";\r\n\r\nconst API_URL = 'https://blog-platform-backend-26rw.onrender.com/api/articles';\r\n\r\nconst fetchApi: () => Promise<Article[]> = async () => {\r\n    try {\r\n        const response = await fetch(API_URL);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`)\r\n        }\r\n        const data = await response.json();\r\n        return data.data;\r\n    } catch (error: any) {\r\n        console.log(\"Error fetching API:\", error.message)\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport default fetchApi","// model\r\nimport { useState, useEffect } from 'react';\r\n\r\n// type\r\nimport { Article } from '../types/BlogArticleProps';\r\n\r\n// utils\r\nimport fetchApi from '../utils/fetchApi';\r\n\r\nconst useFetchArticle = () => {\r\n\r\n    const [articles, setArticles] = useState<Article[]>([])\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n    useEffect(() => {\r\n        const loadArticles = async () => {\r\n            try {\r\n                const data = await fetchApi()\r\n                setArticles(data)\r\n            } catch (err: any) {\r\n                setError(err.message)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        };\r\n\r\n        loadArticles()\r\n    }, [])\r\n\r\n    return { articles, loading, error }\r\n}\r\n\r\nexport default useFetchArticle","import DOMPurify from \"dompurify\";\r\nimport { Card } from \"react-bootstrap\"\r\n\r\n//type\r\nimport { BlogArticleProps } from '../../types/BlogArticleProps';\r\n\r\nconst BlogArticle: React.FC<BlogArticleProps> = (props) => {\r\n\r\n    const { Data } = props\r\n\r\n    return (\r\n        <>\r\n            {Data && Data.length > 0 ? (\r\n                Data.map(item => {\r\n                    const {\r\n                        id,\r\n                        type,\r\n                        title,\r\n                        content,\r\n                        created_at: createdAt,\r\n                        updated_at: updatedAt\r\n                    } = item\r\n                    const sanitizedContent = DOMPurify.sanitize(content)\r\n                    return (\r\n                        <Card className=\"mb-4\" key={id}>\r\n                            <Card.Header>{type.toUpperCase()}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"BlogArticle__title\">{title}</Card.Title>\r\n                                <div dangerouslySetInnerHTML={{ __html: sanitizedContent }}></div>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                Created: {new Date(createdAt).toString().split('GMT')[0]}<br />\r\n                                Updated: {new Date(updatedAt).toString().split('GMT')[0]}\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    )\r\n                })\r\n            ) : (\r\n                <p>No articles available.</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogArticle","// components\r\nimport BlogArticle from \"../Articles/BlogArticle\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport Loading from \"../common/loading\";\r\n\r\n// hooks\r\nimport useFetchArticle from '../../hooks/useFetchArticle';\r\n\r\nconst BlogMain = () => {\r\n\r\n    const { articles, loading, error } = useFetchArticle()\r\n\r\n    if (loading) return <Loading />;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <main>\r\n            <Container>\r\n                <BlogArticle Data={articles} />\r\n            </Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BlogMain","import DefaultPage from \"../components/common/defaultPage\"\r\nimport BlogMain from \"../components/Main/BlogMain\"\r\n\r\nconst BlogPage: React.FC = () => {\r\n    return (\r\n        <DefaultPage>\r\n            <BlogMain />\r\n        </DefaultPage>\r\n    )\r\n}\r\n\r\nexport default BlogPage"],"names":["BlogNavBar","_jsx","_Fragment","children","Navbar","expand","_jsxs","Container","Brand","href","Toggle","Collapse","Nav","Link","customClass","content","RiFacebookCircleLine","link","LiaInstagram","AiFillGithub","BlogFooter","Row","Col","className","f","footer","text","Stack","direction","footerIconItem","map","item","concat","props","async","response","fetch","ok","Error","status","json","data","error","console","log","message","useFetchArticle","articles","setArticles","useState","loading","setLoading","setError","useEffect","fetchApi","err","loadArticles","Data","length","id","type","title","created_at","createdAt","updated_at","updatedAt","sanitizedContent","DOMPurify","sanitize","Card","Header","toUpperCase","Body","Title","dangerouslySetInnerHTML","__html","Footer","Date","toString","split","BlogMain","Loading","BlogArticle","BlogPage","DefaultPage"],"sourceRoot":""}