{"version":3,"file":"static/js/13.34edc11b.chunk.js","mappings":"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","sources":["components/common/blogAlert.tsx","components/NavBar/BlogNavBar.tsx","data/footer.tsx","components/Footer/BlogFooter.tsx","components/common/defaultPage.tsx","config/index.ts","hooks/useAlertShow.tsx","utils/fetchApi.tsx","hooks/useFetchArticle.tsx","components/Articles/BlogArticle.tsx","components/Main/BlogMain.tsx","pages/BlogPage.tsx"],"sourcesContent":["import { useEffect } from \"react\"\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n//type\r\nimport { BlogAlertProps } from \"../../types/BlogAlertProps\";\r\n\r\nconst BlogAlert: React.FC<BlogAlertProps> = (props) => {\r\n\r\n    const { title, text, error, show, onHide, background } = props\r\n\r\n    useEffect(() => {\r\n    }, [error])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={show}\r\n                onHide={onHide}\r\n            >\r\n                <Modal.Header closeButton className={background}>\r\n                    <Modal.Title>\r\n                        {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {text && <p>{text}</p>}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogAlert","import Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlogNavBar: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Navbar\r\n                expand='md'\r\n            >\r\n                <Container>\r\n                    <Navbar.Brand><Link to={'/'} className=\"link-dark text-decoration-none\">Blog Platform</Link></Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <Nav.Link ><Link to={'/'} className=\"link-secondary text-decoration-none\">Home</Link></Nav.Link>\r\n                            <Nav.Link><Link to={'/blog'} className=\"link-secondary text-decoration-none\">Blog</Link></Nav.Link>\r\n                            <Nav.Link><Link to={'/about_us'} className=\"link-secondary text-decoration-none\">About us</Link></Nav.Link>\r\n                            <Nav.Link><Link to={'/contact_us'} className=\"link-secondary text-decoration-none\">Contact us</Link></Nav.Link>\r\n                            <Nav.Link><Link to={'/backstage'} className=\"link-secondary text-decoration-none\">Backstage</Link></Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogNavBar","//icon\r\nimport { RiFacebookCircleLine, LiaInstagram, AiFillGithub } from '../assets/icon/index'\r\n\r\nconst footerIconItem = [\r\n    { customClass: 'ms-auto text-dark', content: <RiFacebookCircleLine />, link: null },\r\n    { customClass: 'text-dark', content: <LiaInstagram />, link: null },\r\n    { customClass: 'text-dark', content: <AiFillGithub />, link: 'https://github.com/Glem2003/blog-demo' }\r\n]\r\n\r\nexport default footerIconItem","// style\r\nimport './BlogFooter.sass'\r\n\r\n//data\r\nimport footerIconItem from '../../data/footer'\r\n\r\n//content\r\nimport { footerContent as f } from '../../content/index'\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nconst BlogFooter: React.FC = () => {\r\n\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"footer__text\">{f.footer.text}</div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Stack direction='horizontal' className='justify-content-end'>\r\n                            {footerIconItem.map(item => {\r\n                                const { customClass, content, link } = item\r\n                                return (\r\n                                    <a href={link != null ? link : '/#!'}>\r\n                                        <div className={`footer__icon ${customClass !== null ? customClass : ''}`}>{content}</div>\r\n                                    </a>\r\n                                )\r\n                            })}\r\n                        </Stack>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </footer >\r\n    )\r\n}\r\n\r\nexport default BlogFooter","import BlogNavBar from \"../NavBar/BlogNavBar\"\r\nimport BlogFooter from \"../Footer/BlogFooter\"\r\n\r\n//type\r\nimport { defaultPageProps } from \"../../types/DefaultPageProps\"\r\n\r\nconst DefaultPage: React.FC<defaultPageProps> = (props) => {\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <>\r\n            <BlogNavBar />\r\n            {children}\r\n            <BlogFooter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultPage","export const ARTICLE_API_URL = 'https://blog-platform-backend-26rw.onrender.com/api';\r\nexport const ARTICLES_API_URL = 'https://blog-platform-backend-26rw.onrender.com/api/articles';","import { useState, useEffect } from 'react'\r\n\r\n// type\r\nimport { UseAlertShowProps } from '../types/HooksProps';\r\n\r\nconst useAlertShow = ({ isError, onClearError, isMessage, onClearMessage }: UseAlertShowProps) => {\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            setShow(true)\r\n        }\r\n    }, [isError])\r\n\r\n    useEffect(() => {\r\n        if (isMessage) {\r\n            setShow(true)\r\n        }\r\n    }, [isMessage])\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        if (onClearError) {\r\n            onClearError();\r\n        }\r\n\r\n        if (onClearMessage) {\r\n            onClearMessage();\r\n        }\r\n    };\r\n\r\n    return { show, setShow, handleClose }\r\n}\r\n\r\nexport default useAlertShow","import axios from \"axios\";\r\nimport { Article } from \"../types/BlogArticleProps\";\r\n\r\nconst fetchApi: (API_URL: string) => Promise<Article[]> = async (API_URL) => {\r\n    try {\r\n        const response = await axios.get(API_URL);\r\n        const content = await response.data;\r\n        return content.data;\r\n    } catch (error: any) {\r\n        throw new Error(error.message)\r\n    }\r\n}\r\n\r\nexport default fetchApi","// model\r\nimport { useState, useEffect } from 'react';\r\n\r\n// type\r\nimport { Article } from '../types/BlogArticleProps';\r\n\r\n// utils\r\nimport fetchApi from '../utils/fetchApi';\r\n\r\n// Shared utility hook\r\nconst useFetch = <T,>(API_URL: string) => {\r\n\r\n    const [data, setData] = useState<T | null>(null)\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            setError(null)\r\n            try {\r\n                const result = await fetchApi(API_URL)\r\n                setData(result as T)\r\n            } catch (err: any) {\r\n                setError(err.message)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        };\r\n\r\n        fetchData()\r\n    }, [API_URL])\r\n\r\n    return { data, loading, error }\r\n}\r\n\r\nexport const useFetchArticles = (API_URL: string) => {\r\n    return useFetch<Article[]>(API_URL)\r\n}","import DOMPurify from \"dompurify\";\r\nimport { Card } from \"react-bootstrap\"\r\n\r\n//type\r\nimport { BlogArticleProps } from '../../types/BlogArticleProps';\r\n\r\nconst BlogArticle: React.FC<BlogArticleProps> = (props) => {\r\n\r\n    const { data: Data } = props\r\n\r\n    return (\r\n        <>\r\n            {Data && Data.length > 0 ? (\r\n                Data.map(item => {\r\n                    const {\r\n                        id,\r\n                        type,\r\n                        title,\r\n                        content,\r\n                        created_at: createdAt,\r\n                        updated_at: updatedAt\r\n                    } = item\r\n                    const sanitizedContent = DOMPurify.sanitize(content)\r\n                    return (\r\n                        <Card className=\"mb-4\" key={id}>\r\n                            <Card.Header>{type.toUpperCase()}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"BlogArticle__title\">{title}</Card.Title>\r\n                                <div dangerouslySetInnerHTML={{ __html: sanitizedContent }}></div>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                Created: {new Date(createdAt).toString().split('GMT')[0]}<br />\r\n                                Updated: {new Date(updatedAt).toString().split('GMT')[0]}\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    )\r\n                })\r\n            ) : (\r\n                <p>No articles available.</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogArticle","// components\r\nimport BlogArticle from \"../Articles/BlogArticle\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport Loading from \"../common/loading\";\r\nimport BlogAlert from \"../../components/common/blogAlert\";\r\n\r\n// hooks\r\nimport useAlertShow from \"../../hooks/useAlertShow\";\r\nimport { useFetchArticles } from '../../hooks/useFetchArticle';\r\n\r\n// config\r\nimport { ARTICLES_API_URL } from \"../../config\";\r\n\r\nconst BlogMain = () => {\r\n\r\n    const { data: article, loading, error } = useFetchArticles(ARTICLES_API_URL)\r\n    const { show, handleClose } = useAlertShow({ isError: error })\r\n    \r\n    if (loading) return <Loading />;\r\n\r\n    return (\r\n        <main>\r\n            <Container>\r\n                <BlogAlert\r\n                    title=\"Error\"\r\n                    text={error}\r\n                    error={error}\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    background=\"bg-danger\"\r\n                />\r\n                <BlogArticle data={article || []} />\r\n            </Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BlogMain","import DefaultPage from \"../components/common/defaultPage\"\r\nimport BlogMain from \"../components/Main/BlogMain\"\r\n\r\nconst BlogPage: React.FC = () => {\r\n    return (\r\n        <DefaultPage>\r\n            <BlogMain />\r\n        </DefaultPage>\r\n    )\r\n}\r\n\r\nexport default BlogPage"],"names":["props","title","text","error","show","onHide","background","useEffect","_jsx","_Fragment","children","_jsxs","Modal","Header","closeButton","className","Title","Body","BlogNavBar","Navbar","expand","Container","Brand","Link","to","Toggle","Collapse","Nav","customClass","content","RiFacebookCircleLine","link","LiaInstagram","AiFillGithub","BlogFooter","Row","Col","f","footer","Stack","direction","footerIconItem","map","item","href","concat","ARTICLE_API_URL","ARTICLES_API_URL","_ref","isError","onClearError","isMessage","onClearMessage","setShow","useState","handleClose","async","response","axios","get","API_URL","data","Error","message","useFetchArticles","setData","loading","setLoading","setError","result","fetchApi","err","fetchData","useFetch","Data","length","id","type","created_at","createdAt","updated_at","updatedAt","sanitizedContent","DOMPurify","sanitize","Card","toUpperCase","dangerouslySetInnerHTML","__html","Footer","Date","toString","split","BlogMain","article","useAlertShow","Loading","BlogAlert","BlogArticle","BlogPage","DefaultPage"],"sourceRoot":""}